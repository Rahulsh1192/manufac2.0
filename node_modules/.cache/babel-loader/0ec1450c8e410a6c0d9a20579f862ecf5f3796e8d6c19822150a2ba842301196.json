{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/manufac-assignment/src/components/wine/wine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { helpers } from \"../../utils\";\nimport styles from \"./wine.module.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WineStats = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  // Define the grouping function\n  function grouping(result, current) {\n    debugger;\n    const categary = current.Alcohol;\n    if (!(categary in result)) {\n      result[categary] = [];\n    }\n    result[categary].push(current);\n    return result;\n  }\n  const results = {};\n  async function fetchData() {\n    debugger;\n    try {\n      const response = await axios.get(\"/data.json\"); // Assuming the file is in the public folder\n\n      console.log(response);\n      // setData(response.data.data);\n      let roleObj = {};\n      const data = response.data.data.reduce(grouping, {});\n      // setData(data);\n\n      console.log(data);\n      for (const key in data) {\n        results[key] = {\n          mean: helpers.calculateMean(data[key]),\n          median: helpers.calculateMedian(data[key]),\n          mode: helpers.calculateMode(data[key])\n        };\n      }\n      console.log(results);\n      console.log(Object.keys(results));\n      console.log(Object.entries(results));\n      setData(results);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // Alcohol\n  //   function grouping(key, obj) {\n  //     if (!(key in obj)) {\n  //       obj[key] = [];\n  //     }\n  //     obj.key.push(obj);\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Measure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), Object.entries(data).map(([key, ele], index) => {\n          return /*#__PURE__*/_jsxDEV(\"th\", {\n            children: `Class ${ele}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), Object.values(data).map((ele, ind) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele.mean\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele.median\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ele.mode[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(WineStats, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = WineStats;\nexport default WineStats;\nvar _c;\n$RefreshReg$(_c, \"WineStats\");","map":{"version":3,"names":["React","useState","useEffect","helpers","styles","axios","jsxDEV","_jsxDEV","WineStats","_s","data","setData","grouping","result","current","categary","Alcohol","push","results","fetchData","response","get","console","log","roleObj","reduce","key","mean","calculateMean","median","calculateMedian","mode","calculateMode","Object","keys","entries","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ele","index","values","ind","_c","$RefreshReg$"],"sources":["/home/rahul/Desktop/manufac-assignment/src/components/wine/wine.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { helpers } from \"../../utils\";\nimport styles from \"./wine.module.css\";\n\nimport axios from \"axios\";\nconst WineStats = () => {\n  const [data, setData] = useState([]);\n\n  // Define the grouping function\n  function grouping(result, current) {\n    debugger;\n    const categary = current.Alcohol;\n    if (!(categary in result)) {\n      result[categary] = [];\n    }\n    result[categary].push(current);\n    return result;\n  }\n\n  const results = {};\n\n  async function fetchData() {\n    debugger;\n    try {\n      const response = await axios.get(\"/data.json\"); // Assuming the file is in the public folder\n\n      console.log(response);\n      // setData(response.data.data);\n      let roleObj = {};\n      const data = response.data.data.reduce(grouping, {});\n      // setData(data);\n\n      console.log(data);\n      for (const key in data) {\n        results[key] = {\n          mean: helpers.calculateMean(data[key]),\n          median: helpers.calculateMedian(data[key]),\n          mode: helpers.calculateMode(data[key]),\n        };\n      }\n\n      console.log(results);\n      console.log(Object.keys(results));\n      console.log(Object.entries(results));\n      setData(results);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // Alcohol\n  //   function grouping(key, obj) {\n  //     if (!(key in obj)) {\n  //       obj[key] = [];\n  //     }\n  //     obj.key.push(obj);\n  //   }\n\n  return (\n    <div>\n      <table>\n        <tr>\n          <th>Measure</th>\n\n          {Object.entries(data).map(([key, ele], index) => {\n            return <th key={index}>{`Class ${ele}`}</th>;\n          })}\n        </tr>\n        {Object.values(data).map((ele, ind) => {\n          return (\n            <tr>\n              {/* <td>{`Flavanoids ${key}`}</td> */}\n              <td>{ele.mean}</td>\n              <td>{ele.median}</td>\n              <td>{ele.mode[0]}</td>\n            </tr>\n          );\n        })}\n      </table>\n    </div>\n  );\n};\n\nexport default WineStats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}