{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/manufac-assignment/src/components/wine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WineStats = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  // Define the grouping function\n  function grouping(result, current) {\n    debugger;\n    const categary = current.Alcohol;\n    if (!(categary in result)) {\n      result[categary] = [];\n    }\n    result[categary].push(current);\n    return result;\n  }\n  const results = {};\n  async function fetchData() {\n    debugger;\n    try {\n      const response = await axios.get(\"/data.json\"); // Assuming the file is in the public folder\n\n      console.log(response);\n      setData(response.data.data);\n      let roleObj = {};\n      const data = response.data.data.reduce(grouping, {});\n      console.log(data);\n      for (const key in data) {\n        results[key] = {\n          mean: calculateMean(data[key]),\n          median: calculateMedian(data[key]),\n          mode: calculateMode(data[key])\n        };\n      }\n      console.log(results);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n  function calculateMean(arr) {\n    const sum = arr.reduce((total, item) => total + item.Flavanoids, 0);\n    return sum / arr.length;\n  }\n  function calculateMedian(arr) {\n    const sorted = arr.map(item => item.Flavanoids).sort((a, b) => a - b);\n    const middle = Math.floor(sorted.length / 2);\n    if (sorted.length % 2 === 0) {\n      return (sorted[middle - 1] + sorted[middle]) / 2;\n    } else {\n      return sorted[middle];\n    }\n  }\n  function calculateMode(arr) {\n    const counts = {};\n    let mode = [];\n    let maxCount = 0;\n    arr.forEach(item => {\n      const value = item.Flavanoids;\n      counts[value] = (counts[value] || 0) + 1;\n      if (counts[value] > maxCount) {\n        maxCount = counts[value];\n        mode = [value];\n      } else if (counts[value] === maxCount) {\n        mode.push(value);\n      }\n    });\n    console.log(counts);\n    return mode;\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // Alcohol\n  //   function grouping(key, obj) {\n  //     if (!(key in obj)) {\n  //       obj[key] = [];\n  //     }\n  //     obj.key.push(obj);\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"wine\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n};\n_s(WineStats, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = WineStats;\nexport default WineStats;\nvar _c;\n$RefreshReg$(_c, \"WineStats\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WineStats","_s","data","setData","grouping","result","current","categary","Alcohol","push","results","fetchData","response","get","console","log","roleObj","reduce","key","mean","calculateMean","median","calculateMedian","mode","calculateMode","error","arr","sum","total","item","Flavanoids","length","sorted","map","sort","a","b","middle","Math","floor","counts","maxCount","forEach","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rahul/Desktop/manufac-assignment/src/components/wine.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst WineStats = () => {\n  const [data, setData] = useState([]);\n\n  // Define the grouping function\n  function grouping(result, current) {\n    debugger;\n    const categary = current.Alcohol;\n    if (!(categary in result)) {\n      result[categary] = [];\n    }\n    result[categary].push(current);\n    return result;\n  }\n\n  const results = {};\n\n  async function fetchData() {\n    debugger;\n    try {\n      const response = await axios.get(\"/data.json\"); // Assuming the file is in the public folder\n\n      console.log(response);\n      setData(response.data.data);\n      let roleObj = {};\n      const data = response.data.data.reduce(grouping, {});\n\n      console.log(data);\n      for (const key in data) {\n        results[key] = {\n          mean: calculateMean(data[key]),\n          median: calculateMedian(data[key]),\n          mode: calculateMode(data[key]),\n        };\n      }\n\n      console.log(results);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n\n  function calculateMean(arr) {\n    const sum = arr.reduce((total, item) => total + item.Flavanoids, 0);\n    return sum / arr.length;\n  }\n\n  function calculateMedian(arr) {\n    const sorted = arr.map((item) => item.Flavanoids).sort((a, b) => a - b);\n    const middle = Math.floor(sorted.length / 2);\n\n    if (sorted.length % 2 === 0) {\n      return (sorted[middle - 1] + sorted[middle]) / 2;\n    } else {\n      return sorted[middle];\n    }\n  }\n\n  function calculateMode(arr) {\n    const counts = {};\n    let mode = [];\n    let maxCount = 0;\n\n    arr.forEach((item) => {\n      const value = item.Flavanoids;\n      counts[value] = (counts[value] || 0) + 1;\n\n      if (counts[value] > maxCount) {\n        maxCount = counts[value];\n        mode = [value];\n      } else if (counts[value] === maxCount) {\n        mode.push(value);\n      }\n    });\n    console.log(counts);\n    return mode;\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // Alcohol\n  //   function grouping(key, obj) {\n  //     if (!(key in obj)) {\n  //       obj[key] = [];\n  //     }\n  //     obj.key.push(obj);\n  //   }\n\n  return <div>wine</div>;\n};\n\nexport default WineStats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}