{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/manufac-assignment/src/components/wine.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WineStats = () => {\n  _s();\n  const [data, setData] = useState([]);\n\n  // Define the grouping function\n  function grouping(result = {}, current) {\n    const categary = current.Alcohol;\n    if (!(categary in result)) {\n      result[categary] = [];\n    }\n    result[key].push(obj);\n    return result;\n  }\n  async function fetchData() {\n    debugger;\n    try {\n      const response = await axios.get(\"/data.json\"); // Assuming the file is in the public folder\n\n      console.log(response);\n      setData(response.data.data);\n      let roleObj = {};\n      const data = response.data.data((result, current) => grouping(result, current));\n      //   const data = response.data.data.reduce((accumulator, currentValue) => {\n      //     debugger;\n      //     const category = currentValue.Alcohol;\n\n      //     if (!(category in accumulator)) {\n      //       accumulator[category] = [];\n      //     }\n      //     accumulator[category].push(currentValue);\n      //     return accumulator;\n      //   }, {});\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // Alcohol\n  function grouping(key, obj) {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj.key.push(obj);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"wine\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s(WineStats, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = WineStats;\nexport default WineStats;\nvar _c;\n$RefreshReg$(_c, \"WineStats\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","WineStats","_s","data","setData","grouping","result","current","categary","Alcohol","key","push","obj","fetchData","response","get","console","log","roleObj","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rahul/Desktop/manufac-assignment/src/components/wine.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst WineStats = () => {\n  const [data, setData] = useState([]);\n\n  // Define the grouping function\n  function grouping(result = {}, current) {\n    const categary = current.Alcohol;\n    if (!(categary in result)) {\n      result[categary] = [];\n    }\n    result[key].push(obj);\n    return result;\n  }\n\n  async function fetchData() {\n    debugger;\n    try {\n      const response = await axios.get(\"/data.json\"); // Assuming the file is in the public folder\n\n      console.log(response);\n      setData(response.data.data);\n      let roleObj = {};\n      const data = response.data.data((result, current) =>\n        grouping(result, current)\n      );\n      //   const data = response.data.data.reduce((accumulator, currentValue) => {\n      //     debugger;\n      //     const category = currentValue.Alcohol;\n\n      //     if (!(category in accumulator)) {\n      //       accumulator[category] = [];\n      //     }\n      //     accumulator[category].push(currentValue);\n      //     return accumulator;\n      //   }, {});\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  }\n  useEffect(() => {\n    fetchData();\n  }, []);\n  // Alcohol\n  function grouping(key, obj) {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj.key.push(obj);\n  }\n\n  return <div>wine</div>;\n};\n\nexport default WineStats;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,SAASS,QAAQA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAEC,OAAO,EAAE;IACtC,MAAMC,QAAQ,GAAGD,OAAO,CAACE,OAAO;IAChC,IAAI,EAAED,QAAQ,IAAIF,MAAM,CAAC,EAAE;MACzBA,MAAM,CAACE,QAAQ,CAAC,GAAG,EAAE;IACvB;IACAF,MAAM,CAACI,GAAG,CAAC,CAACC,IAAI,CAACC,GAAG,CAAC;IACrB,OAAON,MAAM;EACf;EAEA,eAAeO,SAASA,CAAA,EAAG;IACzB;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;;MAEhDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;MACrBV,OAAO,CAACU,QAAQ,CAACX,IAAI,CAACA,IAAI,CAAC;MAC3B,IAAIe,OAAO,GAAG,CAAC,CAAC;MAChB,MAAMf,IAAI,GAAGW,QAAQ,CAACX,IAAI,CAACA,IAAI,CAAC,CAACG,MAAM,EAAEC,OAAO,KAC9CF,QAAQ,CAACC,MAAM,EAAEC,OAAO,CAC1B,CAAC;MACD;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACAS,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF;EACAtB,SAAS,CAAC,MAAM;IACdgB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN;EACA,SAASR,QAAQA,CAACK,GAAG,EAAEE,GAAG,EAAE;IAC1B,IAAI,EAAEF,GAAG,IAAIE,GAAG,CAAC,EAAE;MACjBA,GAAG,CAACF,GAAG,CAAC,GAAG,EAAE;IACf;IACAE,GAAG,CAACF,GAAG,CAACC,IAAI,CAACC,GAAG,CAAC;EACnB;EAEA,oBAAOZ,OAAA;IAAAoB,QAAA,EAAK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACxB,CAAC;AAACtB,EAAA,CAnDID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAqDf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}